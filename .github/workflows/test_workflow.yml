# This is a basic workflow to help you get started with Actions
name: Build Firmware

# on:
#   push:
#     branches:
#       - workflow_debug
#     tags:
#       - v*
#   workflow_dispatch:

jobs:
  Build_Firmware:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: False
      matrix: 
        firmware_env:
          - wanhao__d12__230
          - wanhao__d12__230__bltouch
          - wanhao__d12__230__full
          - wanhao__d12__230__full__bltouch
          - wanhao__d12__300
          - wanhao__d12__300__bltouch
          - wanhao__d12__300__full
          - wanhao__d12__300__full__bltouch
          - wanhao__d12__lvgl__230
          - wanhao__d12__lvgl__300
          - wanhao__d12__lvgl__230__bltouch
          - wanhao__d12__lvgl__300__bltouch
          - wanhao__d12__lvgl__230__full
          - wanhao__d12__lvgl__300__full
          - wanhao__d12__lvgl__230__full__bltouch
          - wanhao__d12__lvgl__300__full__bltouch
    steps:
      - uses: actions/checkout@v2
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
      - name: Cache PlatformIO
        uses: actions/cache@v2
        with:
          path: ~/.platformio
          key: ${{ runner.os }}-${{ hashFiles('AutoBuild-MarlinFirware/common.platform.ini') }}
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install minimal deps (pip && pipenv)
        run:  python -m pip install --upgrade pip pipenv
      - name: Execute the pipenv install
        run: pipenv install
      - name: Execute platformio install
        run: pipenv run platformio platform install $( awk -F "=" '/platform\s/ {print $2}' AutoBuild-MarlinFirware/common.platform.ini )
      - name: Execute platformio build
        run: pipenv run platformio run -d AutoBuild-MarlinFirware -e ${{ matrix.firmware_env }}
      - name: Upload ${{ matrix.firmware_env }} Firmware
        uses: actions/upload-artifact@v2
        with:
          name: firmware-${{ matrix.firmware_env }}
          path: AutoBuild-MarlinFirware/.pio/build/${{ matrix.firmware_env }}/out/Robin_nano.bin
  Make_Assets:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: False
      matrix: 
        assets_env:
          - MKS
          - Wanhao
          - Community.LeLudoLab
    steps:
      - uses: actions/checkout@v2
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install minimal deps (pip && pipenv)
        run:  python -m pip install --upgrade pip pipenv
      - name: Execute the pipenv install
        run: pipenv install
      - name: Make assets
        run: make -j -f Assets/Makefile ${${{ matrix.assets_env }}//./\/}
      - name: Upload ${{ matrix.assets_env }} Assets Compiled
        uses: actions/upload-artifact@v2
        with:
          name: assets-{{ matrix.assets_env }}
          path: .build/${{ matrix.assets_env }}
  Create_Release:
    steps:
      - uses: actions/download-artifact@v2
      - name: Display structure of downloaded files
        run: ls -R

      # - uses: "marvinpinto/action-automatic-releases@latest"
      #   with:
      #     repo_token: "${{ secrets.GITHUB_TOKEN }}"
      #     prerelease: true
      #     automatic_release_tag: latest
      #     files: |
      #       README.md